basePath: /
definitions:
  domain.Account:
    properties:
      balance:
        example: 1000
        type: integer
      currency:
        example: UAH
        type: string
      id:
        example: 1
        type: integer
      lastUpdate:
        example: "2022-08-25T14:58:16.413065Z"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  domain.AccountCreateInput:
    properties:
      balance:
        example: 200
        type: integer
      currency:
        example: UAH
        type: string
    required:
    - balance
    - currency
    type: object
  domain.AccountUpdateInput:
    properties:
      balance:
        example: 1000
        type: integer
    type: object
  domain.SignInInput:
    properties:
      email:
        example: ofilatov@gmail.com
        type: string
      password:
        example: TheBestGuy99
        type: string
    required:
    - email
    - password
    type: object
  domain.SignUpInput:
    properties:
      email:
        example: ofilatov@gmail.com
        type: string
      firstName:
        example: Oleksii
        type: string
      lastName:
        example: Filatov
        type: string
      password:
        example: TheBestGuy99
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  rest.authResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NjEzMzY0NTUsImlhdCI6MTY2MTMzNTU1NSwianRpIjoiMyJ9.5LfGkxciCiJgEFV8yjX9Pvelt6sZtvUefgIiHIUiiak
        type: string
    type: object
  rest.errorResponse:
    properties:
      error:
        type: string
    type: object
  rest.statusResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: 'Example: Bearer token'
  license: {}
  title: CRUD app API
  version: "1.0"
paths:
  /account:
    get:
      description: Get all user's accounts list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Account'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get accounts
      tags:
      - account
    post:
      consumes:
      - application/json
      description: Create new account for user
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.AccountCreateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create new account for user
      tags:
      - account
  /account/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user's account by id
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete account
      tags:
      - account
    get:
      consumes:
      - application/json
      description: Get user's account by id
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get account
      tags:
      - account
    post:
      consumes:
      - application/json
      description: Update user's account info by id
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: string
      - description: account update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.AccountUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update account
      tags:
      - account
  /auth/log-in:
    post:
      consumes:
      - application/json
      description: Init session by user credentials
      parameters:
      - description: user credentials to Log-In
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: LogIn
      tags:
      - auth
  /auth/log-out:
    get:
      description: Drop user's session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.statusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: LogOut
      tags:
      - auth
  /auth/refresh:
    get:
      description: Refresh tokens
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.authResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: Refresh tokens
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Get access token by user credentials
      parameters:
      - description: user credentials to Sign-In
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.authResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: SingUp
      parameters:
      - description: user credentials to Sign-Up
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rest.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/rest.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: SingUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
